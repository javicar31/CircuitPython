import os
import random
import audiocore
import board
import audiobusio
import audiomixer
import adafruit_sdcard
import storage
import digitalio
import time

# Setup chip select correctly as output (recommended)
card_cs = digitalio.DigitalInOut(board.A0)
card_cs.direction = digitalio.Direction.OUTPUT
card_cs.value = True  # CS inactive high

sdcard = None

DATA = board.A1
LRCLK = board.A2
BCLK = board.A3
audio = audiobusio.I2SOut(BCLK, LRCLK, DATA)
mixer = None

button = digitalio.DigitalInOut(board.BUTTON)
button.switch_to_input(pull=digitalio.Pull.UP)

wave_files = []

def load_wave_files():
    global wave_files
    wave_files = []
    # Scan root and /sd folders for files named '1.wav'...'10.wav' or fewer
    for i in range(1, 11):
        for base_path in ("/", "/sd/"):
            filename = f"{base_path}{i}.wav"
            # Check if file exists and is not hidden/system file
            try:
                # On some filesystems, hidden files start with '.', so check that too
                if os.stat(filename):
                    wave_files.append(filename)
            except OSError:
                pass  # file doesn't exist

load_wave_files()

def open_audio():
    n = random.choice(wave_files)
    print("playing", n)
    f = open(n, "rb")
    w = audiocore.WaveFile(f)
    return f, w

wavefile = None

while True:
    if not sdcard:
        try:
            sdcard = adafruit_sdcard.SDCard(board.SPI(), card_cs)
            vfs = storage.VfsFat(sdcard)
            storage.mount(vfs, "/sd")
            print("Mounted SD card")
            load_wave_files()
            print("Audio files found:", wave_files)
        except OSError as e:
            print("SD card mount error:", e)
            time.sleep(1)

    if not button.value:
        if mixer and mixer.voice[0].playing:
            print("Stopping playback")
            mixer.voice[0].stop()
            if wavefile:
                wavefile.close()
                wavefile = None
        else:
            if len(wave_files) == 0:
                print("No audio files found!")
            else:
                wavefile, wave = open_audio()
                mixer = audiomixer.Mixer(voice_count=1,
                                         sample_rate=wave.sample_rate,
                                         channel_count=wave.channel_count,
                                         bits_per_sample=wave.bits_per_sample,
                                         samples_signed=True)
                mixer.voice[0].level = 0.5
                audio.play(mixer)
                mixer.voice[0].play(wave)

        # Wait for button release to avoid repeated triggers
        while not button.value:
            time.sleep(0.05)

    time.sleep(0.1)
